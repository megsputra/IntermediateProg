Assignment 2 - Arrays, Sorting and Searching

due January 23rd

The purpose of this assignment is to give you practice working with arrays, passing them to functions, sorting, searching and reading and writing text files.

In this program you will read two files and store their contents in arrays.  You will sort both arrays, and then search an array for each element of the second array.

Program Steps

Open two input files and one output file.
Input files
unsorted_dictionary.txt - this file contains 16000 words
keywords.txt - this file contains 84 words
Read in these two files and store their contents in 2 arrays of strings.  Do not use a vector.
Sort both arrays using either a selection sort, bubble sort or an insertion sort.  Use the same sort routine for sorting both arrays.  Do not use the STL sort algorithm or quick sort.
Search the dictionary array for each keyword.  If the keyword is not present in the dictionary array, write a message to the output file that the keyword is not found in the dictionary (see sample output below).  Count the number of keywords not found.  You will print this number at the end of the program.
Output Details

Required console output

Number of keywords not found = ??   <= the number is between 20 and 30
Required file output

keyword not found: alignas
keyword not found: alignof
keyword not found: and_eq
keyword not found: asm
keyword not found: auto
keyword not found: bitand
keyword not found: bitor
keyword not found: char16_t
keyword not found: char32_t
keyword not found: compl
...
Additional Requirements

You must include at least two additional functions:
a sort function using either a bubble sort or an insertion sort
a search function that looks for each keyword in the dictionary array.  You may use a function that is similar to the one that was presented in class.
Place the function definitions below main() and function prototypes above main().
Hints

The string class has less than, greater than, and equal operators (that's <, >, and ==).  You'll find those quite useful for sorting and searching.
Try working with small dictionary and small keyword files while you are developing your code.  The logic is the same for a small file as it would be for large files.   It will be easier to debug your code with smaller files.  After you get it working, switch over to the larger files.
 